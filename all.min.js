"use strict";var deevee=angular.module("deeVee",[]);deevee.controller("stageCtrl",["$scope","$http",function(t,a){a.get("parts/parts.json").success(function(a){t.parts=a,t.hideCats()}),t.multiplier=1,t.incrementMultiplier=function(){t.multiplier>4?t.multiplier=1:t.multiplier++},t.isPartDialogOpen=function(){return t.partDialog?"partDialogOpen":""},t.catSelected=function(a){return t.parts[a].visible?"selected":""},t.hideCats=function(){for(var a=0;a<t.parts.length;a++)t.parts[a].visible=!1},t.toggleCat=function(a){t.hideCats(),t.parts[a].visible=!t.parts[a].visible},t.partDialog=!1,t.currentStage=!1,t.openPartDialog=function(a){t.currentStage=a,t.partDialog=!0},t.closePartDialog=function(){t.partDialog=!1,t.currentStage=!1},t.savePartDialog=function(a,s){t.addStagePart(a,s,t.multiplier),t.closePartDialog()},t.gravity=9.81,t.totals={totaldv:0,totalmass:0,totalparts:0},t.checkProperty=function(t,a){return"number"==typeof t[a]?t[a]:0},t.stageList=[],t.addStage=function(){t.stageList.push(t.newStage()),t.updateTotals()},t.removeStage=function(a){t.stageList.splice(a,1),t.stageList.length>0&&t.updateCalculations(a),t.updateTotals()},t.addStagePart=function(a,s,e){for(var r=0;e>r;r++)console.log("adding: "+s),t.stageList[a].addPart(s);t.updateCalculations(a),t.updateTotals()},t.removeStagePart=function(a,s){t.stageList[a].removePart(s),t.updateCalculations(a),t.updateTotals()},t.updateCalculations=function(a){if(0===a)t.stageList[a].result=t.stageList[a].calculate(0),t.stageList.length>0&&t.updateCalculations(1);else for(var s=a;s<t.stageList.length;s++){var e=t.stageList[s-1].result.sumwetmass;t.stageList[s].result=t.stageList[s].calculate(e)}},t.updateTotals=function(){var a,s,e;a=s=e=0;for(var r=0;r<t.stageList.length;r++)s+=t.stageList[r].result.dv,e+=t.stageList[r].partsList.length,r===t.stageList.length-1&&(a=t.stageList[r].result.sumwetmass);t.totals={totaldv:s,totalmass:a,totalparts:e}},t.newStage=function(){var a={};return a.atm=!0,a.partsList=[],a.result={impulse:0,thrustratio:0,dv:0,sumwetmass:0},a.removePart=function(t){var s=t>-1&&"undefined"!=typeof a.partsList[t];s&&a.partsList.splice(t,1),a.result=a.calculate(0)},a.addPart=function(s){for(var e={name:s.name,wetmass:s.wetmass,drymass:s.drymass},r=["impulseatm","impulsevac","thrustatm","thrustvac"],i=0;i<r.length;i++)e[r[i]]=t.checkProperty(s,r[i]);a.partsList.push(e)},a.calculate=function(s){var e,r,i,l,u,n,o;e=r=i=l=o=0,n=u=s;for(var p=0;p<a.partsList.length;p++){n+=a.partsList[p].drymass,u+=a.partsList[p].wetmass;var c,g;a.atm?(c=a.partsList[p].impulseatm,g=a.partsList[p].thrustatm):(c=a.partsList[p].impulsevac,g=a.partsList[p].thrustvac),0!==c&&(e+=g,r+=g/c)}return 0!==r&&(i=e/r),0!==n&&(l=Math.log(u/n)*t.gravity*i),0!==u&&(o=e/(u*t.gravity)),{impulse:i,thrustratio:o,dv:l,sumwetmass:u}},a}}]);
//# sourceMappingURL=data:application/json;base64,
